types: ./types.graphql

functions:
  signup:
    type: resolver
    schema: src/email-password/signup.graphql
    handler:
      code: src/email-password/signup.ts

  authenticate:
    type: resolver
    schema: src/email-password/authenticate.graphql
    handler:
      code: src/email-password/authenticate.ts

  loggedInUser:
    type: resolver
    schema: src/email-password/loggedInUser.graphql
    handler:
      code: src/email-password/loggedInUser.ts

  createWeb:
    type: operationBefore
    operation: Web.create
    handler:
      code: src/createWeb.ts

permissions:
  - operation: User.create
  - operation: User.read
    authenticated: true
    query: src/permissions/User.graphql:read

  - operation: Web.create
    authenticated: true
    query: ./src/permissions/Web.graphql:create
  - operation: Web.read
    authenticated: true
    query: ./src/permissions/Web.graphql:read
  - operation: Web.update
    authenticated: true
    query: ./src/permissions/Web.graphql:update
  - operation: Web.delete
    authenticated: true
    query: ./src/permissions/Web.graphql:delete
  - operation: UserWebs.*
